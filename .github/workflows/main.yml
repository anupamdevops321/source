name: Docker Compose

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@v1.24.0
        env:
           GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
           GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
           GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
           GITGUARDIAN_API_KEY: ${{ secrets.GSS_TOKEN }}

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
         target: 'http://100.26.48.145'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get first 5 characters of commit hash
        id: commit_hash
        run: echo "::set-output name=short_commit_hash::$(echo $GITHUB_SHA | cut -c1-5)"

      - name: Build and push backend image
        run: |
          docker buildx build --platform linux/amd64 --no-cache -t ${{ secrets.DOCKER_USERNAME }}/backend-1:${{ steps.commit_hash.outputs.short_commit_hash }} -f Dockerfile-backend --push .

      - name: Build and push frontend image
        run: |
          docker buildx build --platform linux/amd64 --no-cache -t ${{ secrets.DOCKER_USERNAME }}/frontend-1:${{ steps.commit_hash.outputs.short_commit_hash }} -f Dockerfile-frontend --push .

      - name: Trigger deployment pipeline
        if: success()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT }}
          repository: anupamdevops321/Deployment
          event-type: trigger-deployment
          client-payload: '{"image_tag": "${{ steps.commit_hash.outputs.short_commit_hash }}"}'

stages:
    - trufflehog
    - snyk
    - build-frontend
    - push-frontend
    - build-backend
    - push-backend
    # - provision

# trufflehog_scan:
#   image: python:3
#   tags:
#     - docker-runner
#   stage: trufflehog
#   script:
#     - python3 -m venv venv
#     - source venv/bin/activate
#     - pip install truffleHog
#     - trufflehog --entropy=True --json /builds/anupamdutta/devops-fullstack-app > trufflehog_results.json
#   artifacts:
#     paths:
#       - trufflehog_results.json

# snyk:
#     image: node:14
#     tags:
#       - shell
#     stage: snyk
#     script:
#       - npm install -g snyk
#       - snyk auth $SNYK_TOKEN
#       - echo "running snyk test"
#       - snyk test --all-projects | tee snyk_report.txt
#       - echo "snyl test successful"
#     artifacts:
#       paths:
#         - snyk_report.txt
#     allow_failure: true

# frontend:
#     image: node:14
#     tags:
#       - docker-runner
#     stage: build-frontend
#     script:
#         - cd /builds/anupamdutta/devops-fullstack-app/frontend/
#         - npm install
#         - npm run build

push_frontend_image:
  image: alpine
  tags:
    - shell
  stage: push-frontend
  script:
      - docker login -u anupamdutta -p $CI_REGISTRY_TOKEN code.techverito.com:4567
      - docker build -t code.techverito.com:4567/anupamdutta/devops-fullstack-app/frontend -f Dockerfile-frontend .
      - docker push code.techverito.com:4567/anupamdutta/devops-fullstack-app/frontend

backend:
    image: golang:1.19
    tags:
      - docker
    stage: build-backend
    script:
        - cd /builds/anupamdutta/devops-fullstack-app/backend
        - go mod download
        - CGO_ENABLED=0 GOOS=linux go build -o app .
push_backend_image:
  image: alpine
  tags:
    - shell
  stage: push-backend
  script:
      - docker login -u anupamdutta -p $CI_REGISTRY_TOKEN code.techverito.com:4567
      - docker build -t code.techverito.com:4567/anupamdutta/devops-fullstack-app/backend -f Dockerfile-backend .
      - docker push code.techverito.com:4567/anupamdutta/devops-fullstack-app/backend

# terraform:
#   image: alpine
#   tags:
#     - shell
#   stage: provision
#   before_script:
#     - mkdir -p ~/.aws
#     - echo -e "[default]\naws_access_key_id=$AWS_ACCESS_KEY_ID\naws_secret_access_key=$AWS_SECRET_ACCESS_KEY" > ~/.aws/credentials
#   script:
#     - terraform init
#     - terraform fmt
#     - terraform plan -out tfplan
#     - terraform apply --auto-approve tfplan